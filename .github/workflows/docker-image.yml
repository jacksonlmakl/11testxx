name: Docker Compose CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Validate and Set Environment Variables
      run: |
        # Check if IMAGE_NAME and TAG exist in vars, otherwise set defaults
        IMAGE_NAME=${{ vars.IMAGE_NAME }}
        TAG=${{ vars.TAG }}

        # Ensure they are not empty
        if [[ -z "$IMAGE_NAME" || "$IMAGE_NAME" == "null" ]]; then 
          echo "Error: IMAGE_NAME is empty or not set!" >&2
          exit 1
        fi

        if [[ -z "$TAG" || "$TAG" == "null" ]]; then 
          echo "Error: TAG is empty or not set!" >&2
          exit 1
        fi

        echo "Using IMAGE_NAME=$IMAGE_NAME and TAG=$TAG"
        echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
        echo "TAG=$TAG" >> $GITHUB_ENV

    # ✅ Step 1: Install Dependencies & Build Frontend
    - name: Install Node.js & Build Frontend
      run: |
        sudo apt update
        sudo apt install -y nodejs npm
        npm install
        npm run build

    # ✅ Step 2: Verify `build/` Exists Before Building the Docker Image
    - name: Verify Build Directory
      run: ls -la build

    # ✅ Step 3: Build and Push Docker Image (Ensuring `build/` Is Included)
    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
